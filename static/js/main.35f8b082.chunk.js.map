{"version":3,"sources":["components/Button/Button.module.css","components/Modal/Modal.module.css","components/Searchbar/Searchbar.module.css","components/ImageGallery/ImageGallery.module.css","services/fetchAPI.js","components/Searchbar/Searchbar.js","components/Button/Button.js","components/ImageGallery/ImageGalleryItem.js","components/Modal/Modal.js","components/ImageGallery/ImageGallery.js","components/App.js","index.js"],"names":["module","exports","baseURL","fetchImg","query","currentPage","url","axios","get","then","data","hits","Searchbar","onSubmit","useState","setQuery","className","s","searchBar","searchForm","e","preventDefault","type","searchFormButton","searchFormButtonLabel","searchFormInput","value","onChange","currentTarget","Button","onClick","isLoading","button","loader","color","height","width","visible","ImageGalleryItem","webformatURL","onToggleModal","largeImageURL","imageGalleryItem","src","alt","imageGalleryItemImage","modalRoot","document","querySelector","Modal","onCloseModal","children","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","backdrop","target","modal","ImageGallery","images","error","fetchImages","showModal","setShowModal","setLargeImageURL","toggleModal","prevState","handleModalImage","showButton","length","imageGallery","map","id","App","setImages","setCurrentPage","setError","setIsLoading","scrollTo","top","documentElement","scrollHeight","behavior","options","catch","err","finally","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.35f8b082.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__30S4h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__3dm9p\",\"modal\":\"Modal_modal__1wlY2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchBar\":\"Searchbar_searchBar__byalS\",\"searchForm\":\"Searchbar_searchForm__2Xl_S\",\"searchFormButton\":\"Searchbar_searchFormButton__cX3Oc\",\"searchFormButtonLabel\":\"Searchbar_searchFormButtonLabel__JnydX\",\"searchFormInput\":\"Searchbar_searchFormInput__3Mt79\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGallery\":\"ImageGallery_imageGallery__3Vv10\",\"imageGalleryItem\":\"ImageGallery_imageGalleryItem__3mhfs\",\"imageGalleryItemImage\":\"ImageGallery_imageGalleryItemImage__1mNeD\"};","import axios from 'axios';\n\nconst apiKey = '4721358-13c427133c953f3e48d1d506d';\nconst perPage = 12;\nconst baseURL = `https://pixabay.com/api/?key=${apiKey}&image_type=photo&orientation=horizontal&per_page=${perPage}&q=`;\n\nconst fetchImg = ({ query = '', currentPage = 1 }) => {\n  const url = `${baseURL}${query}&page=${currentPage}`;\n  return axios.get(url).then(({ data }) => data.hits);\n};\n\nexport default fetchImg;\n","import { useState } from 'react';\nimport s from './Searchbar.module.css';\n\nconst Searchbar = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(query);\n    setQuery('');\n  };\n\n  const handleChange = ({ currentTarget }) => {\n    setQuery(currentTarget.value);\n  };\n\n  return (\n    <header className={s.searchBar}>\n      <form className={s.searchForm} onSubmit={handleSubmit}>\n        <button type=\"submit\" className={s.searchFormButton}>\n          <span className={s.searchFormButtonLabel}>Search</span>\n        </button>\n\n        <input\n          className={s.searchFormInput}\n          type=\"text\"\n          value={query}\n          onChange={handleChange}\n        />\n      </form>\n    </header>\n  );\n};\n\nexport default Searchbar;\n","import Loader from 'react-loader-spinner';\nimport s from './Button.module.css';\n\nconst Button = ({ onClick, isLoading }) => {\n  return (\n    <button className={s.button} type=\"button\" onClick={onClick}>\n      <Loader\n        className={s.loader}\n        type=\"TailSpin\"\n        color=\"#00BFFF\"\n        height={20}\n        width={20}\n        visible={isLoading}\n      />\n      {isLoading ? '' : 'Load more'}\n    </button>\n  );\n};\n\nexport default Button;\n","import s from './ImageGallery.module.css';\n\nconst ImageGalleryItem = ({ webformatURL, onToggleModal, largeImageURL }) => {\n  return (\n    <li\n      className={s.imageGalleryItem}\n      onClick={() => onToggleModal(largeImageURL)}\n    >\n      <img src={webformatURL} alt=\"\" className={s.imageGalleryItemImage} />\n    </li>\n  );\n};\n\nexport default ImageGalleryItem;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ onCloseModal, children }) => {\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      onCloseModal();\n    }\n  };\n\n  const handleBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      onCloseModal();\n    }\n  };\n\n  return createPortal(\n    <div className={s.backdrop} onClick={handleBackdropClick}>\n      <div className={s.modal}>{children}</div>\n    </div>,\n    modalRoot,\n  );\n};\n\nexport default Modal;\n","import { useState, useEffect } from 'react';\n\nimport Button from '../Button/Button';\nimport ImageGalleryItem from './ImageGalleryItem';\nimport Modal from '../Modal/Modal';\nimport s from './ImageGallery.module.css';\n\nexport default function ImageGallery({\n  query,\n  images,\n  currentPage,\n  error,\n  fetchImages,\n  isLoading,\n}) {\n  const [showModal, setShowModal] = useState(false);\n  const [largeImageURL, setLargeImageURL] = useState(null);\n\n  const toggleModal = () => {\n    setShowModal(prevState => !prevState);\n    setLargeImageURL(null);\n  };\n\n  const handleModalImage = url => {\n    toggleModal();\n    setLargeImageURL(url);\n  };\n\n  const showButton = images.length > 0;\n\n  return (\n    <>\n      {error && <h2>{error}</h2>}\n      <ul className={s.imageGallery}>\n        {images.map(({ id, webformatURL, largeImageURL }) => (\n          <ImageGalleryItem\n            key={id}\n            webformatURL={webformatURL}\n            onToggleModal={handleModalImage}\n            largeImageURL={largeImageURL}\n          />\n        ))}\n      </ul>\n\n      {showButton && <Button onClick={fetchImages} isLoading={isLoading} />}\n\n      {showModal && (\n        <Modal onCloseModal={toggleModal}>\n          <img src={largeImageURL} alt=\"\" />\n        </Modal>\n      )}\n    </>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport fetchImg from '../services/fetchAPI';\nimport Searchbar from './Searchbar/Searchbar';\nimport ImageGallery from './ImageGallery/ImageGallery';\nimport './App.css';\n\nconst App = () => {\n  const [query, setQuery] = useState('');\n  const [images, setImages] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (query) {\n      fetchImages();\n    }\n  }, [query]);\n\n  useEffect(() => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  });\n\n  const handleSubmitSearchbar = query => {\n    setQuery(query);\n    setImages([]);\n    setCurrentPage(1);\n    setError(null);\n  };\n\n  const fetchImages = () => {\n    const options = {\n      query,\n      currentPage,\n    };\n\n    setIsLoading(true);\n\n    fetchImg(options)\n      .then(\n        images => setImages(prevState => [...prevState, ...images]),\n        setCurrentPage(prevState => prevState + 1),\n      )\n      .catch(err => setError(err))\n      .finally(() => setIsLoading(false));\n  };\n\n  return (\n    <>\n      <Searchbar onSubmit={handleSubmitSearchbar} />\n      <ImageGallery\n        query={query}\n        images={images}\n        currentPage={currentPage}\n        error={error}\n        isLoading={isLoading}\n        fetchImages={fetchImages}\n      />\n    </>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}